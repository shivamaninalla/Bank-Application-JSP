package com.monocept.controller;


import java.io.IOException;
import java.io.PrintWriter;
import java.sql.SQLException;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.monocept.model.Transaction;

@WebServlet("/user")
public class UserController extends HttpServlet {
    private static final long serialVersionUID = 1L;

    @Override
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		String command = request.getParameter("TransactionController");
		System.out.println(command);

		if (command == null) {
			command = "customer-home";
		}

		switch (command) {

		case "Pass Book": 
			passbook(request, response);
			break;
		

		case "New Transaction": 
			newTransaction(request, response);
			break;

		

		case "Edit Profile": 
			editProfile(request, response);
			break;
		

		

		default:
			customerHome(request, response);
		}

	}

	private void customerHome(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		System.out.println("Inside customer Home doGet method");
		RequestDispatcher requestDispatcher = request.getRequestDispatcher("cust-home.jsp");
		requestDispatcher.forward(request, response);

	}
	
	private void passbook(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		System.out.println("Inside passbook");
		protected void list(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

			List<Transaction> transactionList;
			
	        HttpSession session = request.getSession();
	        String email=(String) session.getAttribute("emailId");
	        System.out.println(email);
			
			try {
				
				transactionList = transactionDbUtil.getTransactions(email);
				System.out.println(transactionList);
				request.setAttribute("data", transactionList);
				RequestDispatcher req = request.getRequestDispatcher("passbook.jsp");
				req.forward(request, response);
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

		}

		RequestDispatcher requestDispatcher = request.getRequestDispatcher("passbook.jsp");
		requestDispatcher.forward(request, response);

	}

	private void newTransaction(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		System.out.println("Inside New Transaction doGet method");
		RequestDispatcher requestDispatcher = request.getRequestDispatcher("new-transaction.jsp");
		requestDispatcher.forward(request, response);
	}

	private void editProfile(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		System.out.println("Inside EditProfile doGet method");
		RequestDispatcher requestDispatcher = request.getRequestDispatcher("edit-profile.jsp");
		requestDispatcher.forward(request, response);
	}

	

	
}
